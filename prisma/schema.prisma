generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id        String        @id @unique @default(cuid())
  name      String
  email     String        @unique
  image     String
  createdAt DateTime      @default(now())
  role      String        @default("user")
  events    UserOnEvent[]
  guests    Guest[]
}

model Event {
  slug      String        @id @unique
  name      String
  createdAt DateTime      @default(now())
  users     UserOnEvent[]
  guests    Guest[]
  settings  Setting[]
}

model UserOnEvent {
  id        String   @id @unique @default(cuid())
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
  role      String?  @default("host")
  email     String
  event     Event    @relation(fields: [eventSlug], references: [slug])
  eventSlug String
  createdAt DateTime @default(now())
}

model Guest {
  slug      String
  eventSlug String
  event     Event    @relation(fields: [eventSlug], references: [slug])
  name      String
  amount    Int?
  maxAmount Int
  state     String   @default("pending")
  hostId    String
  host      User     @relation(fields: [hostId], references: [id])
  isFamily  Boolean
  contacted Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  notes     Note[]

  @@id([eventSlug, slug])
}

model Note {
  content        String
  guestSlug      String
  guestEventSlug String
  type           String
  guest          Guest    @relation(fields: [guestSlug, guestEventSlug], references: [slug, eventSlug], onDelete: Cascade)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@id([guestSlug, guestEventSlug, type])
}

model Setting {
  slug      String
  type      String
  event     Event    @relation(fields: [slug], references: [slug])
  value     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([slug, type])
}
